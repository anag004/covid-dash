{"version":3,"sources":["graphs/NYC.js","HomePage.js","App.js","index.js"],"names":["NYC","chartRef","React","createRef","state","bpoint","setBpoint","event","console","log","setState","Runtime","module","notebook","name","Inspector","current","fulfilled","value","nextProps","nextState","this","ref","min","max","step","tooltipVisible","onChange","tooltipPlacement","Component","Content","Layout","Title","Typography","Paragraph","HomePage","style","margin","level","Footer","Header","Sider","App","breakpoint","collapsedWidth","collapsible","defaultCollapsed","onBreakpoint","broken","onCollapse","collapsed","type","className","theme","mode","defaultSelectedKeys","Item","key","icon","HomeOutlined","size","ExperimentOutlined","ContactsOutlined","textAlign","ReactDOM","render","document","getElementById"],"mappings":"qXAmDeA,E,4MA7CXC,SAAWC,IAAMC,Y,EACjBC,MAAQ,CAAEC,OAAQ,I,EAElBC,UAAY,SAACC,GACTC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEL,OAAQE,K,kEAGP,IAAD,QACA,IAAII,KACZC,OAAOC,KAAU,SAAAC,GACrB,MAAa,UAATA,EACO,IAAIC,IAAU,EAAKd,SAASe,SAG1B,mBAATF,EACO,CACHG,UAAW,SAACC,GACR,EAAKb,OAASa,SAH1B,O,yCAUWC,EAAWC,GACtBA,EAAUf,QAAUgB,KAAKjB,MAAMC,SAC/BgB,KAAKhB,OAAOa,MAAQE,EAAUf,U,+BAKlC,OACI,6BACI,yBAAKiB,IAAKD,KAAKpB,WACf,+DACA,6BAGA,kBAAC,IAAD,CAAQsB,IAAK,GAAIC,IAAK,IAAKC,KAAM,EAAGC,gBAAgB,EAAMC,SAAUN,KAAKf,UAAWY,MAAOG,KAAKjB,MAAMC,OAAQuB,iBAAiB,gB,GAxC7HC,aCFVC,EAAYC,IAAZD,QACAE,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UAeAC,MAbf,WACI,OACI,kBAACL,EAAD,CAASM,MAAO,CAAEC,OAAQ,cAC1B,kBAACL,EAAD,qDACA,kBAACE,EAAD,yTAGA,kBAACF,EAAD,CAAOM,MAAO,GAAd,iBACA,kBAAC,EAAD,QCRiBC,GAAkBR,IAAnCS,OAAmCT,IAA3BD,QAA2BC,IAAlBQ,QAAQE,EAAUV,IAAVU,MAsClBC,MApCf,WACE,OACE,kBAAC,IAAD,KACA,kBAACD,EAAD,CACEE,WAAW,KACXC,eAAe,IACfC,aAAa,EACbC,kBAAkB,EAClBC,aAAc,SAAAC,GACZxC,QAAQC,IAAIuC,IAEdC,WAAY,SAACC,EAAWC,GACtB3C,QAAQC,IAAIyC,EAAWC,KAGzB,yBAAKC,UAAU,SACf,kBAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACrD,kBAAC,IAAKC,KAAN,CAAWC,IAAI,IAAIC,KAAM,kBAACC,EAAA,EAAD,CAAcC,KAAK,WAA5C,QAGA,kBAAC,IAAKJ,KAAN,CAAWC,IAAI,IAAIC,KAAM,kBAACG,EAAA,EAAD,OAAzB,iBAGA,kBAAC,IAAKL,KAAN,CAAWC,IAAI,IAAIC,KAAM,kBAACI,EAAA,EAAD,OAAzB,gBAKJ,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAACvB,EAAD,CAAQH,MAAO,CAAE2B,UAAW,WAA5B,gDChCNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.16631e3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Runtime, Inspector } from \"@observablehq/runtime\";\nimport notebook from \"6505d7f8e11d1d3a\";\nimport { Slider } from \"antd\";\n\nclass NYC extends Component {\n    chartRef = React.createRef();\n    state = { bpoint: 60 };\n\n    setBpoint = (event) => {\n        console.log(event);\n        this.setState({ bpoint: event });\n    }\n\n    componentDidMount() {\n        const runtime = new Runtime();\n        runtime.module(notebook, name => {\n            if (name === \"chart\") {\n                return new Inspector(this.chartRef.current);\n            }\n\n            if (name === \"mutable bpoint\") {\n                return {\n                    fulfilled: (value) => {\n                        this.bpoint = value;\n                    }\n                };\n            }\n        });\n    }\n\n    componentDidUpdate(nextProps, nextState) {\n        if (nextState.bpoint != this.state.bpoint) {\n            this.bpoint.value = nextState.bpoint;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div ref={this.chartRef}></div>\n                <large>Scrub to set projection area</large>\n                <br />\n                {/* <input type=\"range\" min=\"60\" max=\"137\" step=\"1\" */}\n                {/* value={this.state.bpoint} onChange={this.setBpoint} /> */}\n                <Slider min={60} max={137} step={1} tooltipVisible={true} onChange={this.setBpoint} value={this.state.bpoint} tooltipPlacement=\"bottom\"></Slider>\n            </div>\n        )\n    }\n}\n\nexport default NYC;","import React from 'react';\nimport { Layout, Menu, Typography, Divider } from 'antd';\nimport NYC from \"./graphs/NYC\";\nconst { Content } = Layout;\nconst { Title, Paragraph } = Typography;\n\nfunction HomePage() {\n    return (\n        <Content style={{ margin: '24px 50px' }}>\n        <Title>COVID19 death projections using a SIRD model</Title>\n        <Paragraph>\n            You can see below various interactive graphs for regions in India and around the world. The red region in each plot indicates that the model is extrapolating deaths in that region. You can use the scrubber to change the amount of data the model fits on and see how that affects the uncertainty intervals. \n        </Paragraph>\n        <Title level={2}>New York City</Title>\n        <NYC/>\n      </Content>\n    )\n}\n\nexport default HomePage;","import React from 'react';\nimport './App.css';\nimport { Layout, Menu } from 'antd';\nimport { HomeOutlined, ContactsOutlined, ExperimentOutlined } from '@ant-design/icons';\nimport HomePage from \"./HomePage\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  return (\n    <Layout>\n    <Sider\n      breakpoint=\"lg\"\n      collapsedWidth=\"0\"\n      collapsible={true}\n      defaultCollapsed={true}\n      onBreakpoint={broken => {\n        console.log(broken);\n      }}\n      onCollapse={(collapsed, type) => {\n        console.log(collapsed, type);\n      }}\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n        <Menu.Item key=\"1\" icon={<HomeOutlined size=\"large\"/>}>\n          Home\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<ExperimentOutlined />}>\n          Model details\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<ContactsOutlined />}>\n          Contact us\n        </Menu.Item>\n      </Menu>\n    </Sider>\n    <Layout>\n      <HomePage></HomePage>\n      <Footer style={{ textAlign: 'center' }}>Created by Ananye Agarwal | Utkarsh Tyagi</Footer>\n    </Layout>\n  </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}